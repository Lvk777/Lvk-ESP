--Webhook
local HttpService = game:GetService("HttpService")
local Webhook_URL = "https://discord.com/api/webhooks/1291916165022617703/_OlycZt1maERoV5ISfRghU-M0dPgTSyg4jd2jTYf3USPK4cinMjYkflQJaCc70nXhUD9" --Wehbook

local function sendRequest(requestFunction)
    local jsonBody = HttpService:JSONEncode({
        ["content"] = "",
        ["embeds"] = {{
            ["title"] = "**O script foi executado!**",
            ["description"] = game.Players.LocalPlayer.DisplayName.." executou o script ",
            ["type"] = "rich",
            ["color"] = tonumber(0xffffff),
            ["fields"] = {{
                ["name"] = "Hardware ID:",
                ["value"] = game:GetService("RbxAnalyticsService"):GetClientId(),
                ["inline"] = true
            }}
        }}
    })

    local response = requestFunction({
        Url = Webhook_URL,
        Method = "POST",
        Headers = {
            ['Content-Type'] = "application/json"
        },
        Body = jsonBody
    })

    print("Response Status Code: ", response.StatusCode)
    print("Response Body: ", response.Body)
end

local requestFunction = (syn and syn.request) or (http_request) or (request)
if requestFunction then
    sendRequest(requestFunction)
else
    warn("Nenhuma funÃ§Ã£o de solicitaÃ§Ã£o HTTP disponÃ­vel.")
end

--Esp
local DinoVision = {
    esp = {
        CharacterSize = Vector2.new(5, 6),
        Box = {
            TeamCheck = false,
            Box = true,
            Name = true,
            Distance = true,
            BoxTransparency = 1,
            Color = Color3.fromRGB(0, 4, 212), -- Cor da box
            Outline = true,
            OutlineColor = Color3.fromRGB(0, 0, 0),
        },
        Highlights = {
            TeamCheck = false,
            Highlights = true,
            OutlineTransparency = 0.5,
            FillTransparency = 0.5,
            OutlineColor = Color3.fromRGB(0, 0, 0), -- Cor da borda preta
            FillColor = Color3.fromRGB(255, 13, 0), -- Cor do highlight
        }
    }
}

local players = game.Players
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local CurrentCamera = workspace.CurrentCamera
local localPlayer = Players.LocalPlayer

local ESPHolder = Instance.new("Folder", CoreGui)
ESPHolder.Name = "ESPHolder"

local ESPEnabled = false

local function IsAlive(Player)
    local character = Player and Player.Character
    local worldCharacter = character and character:FindFirstChild("WorldCharacter")
    return worldCharacter and worldCharacter:FindFirstChild("UpperTorso") ~= nil
end

local function GetTeam(Player)
    return Player and Player.Team
end

local function CreateOutlinedText(parent, text, fontSize, font, textColor, outlineColor)
    local outline = Instance.new("TextLabel", parent)
    outline.BackgroundTransparency = 1
    outline.Text = text
    outline.TextSize = fontSize
    outline.Font = font
    outline.TextColor3 = outlineColor
    outline.TextStrokeTransparency = 0
    outline.AnchorPoint = Vector2.new(0.5, 0.5)

    local mainText = Instance.new("TextLabel", parent)
    mainText.BackgroundTransparency = 1
    mainText.Text = text
    mainText.TextSize = fontSize
    mainText.Font = font
    mainText.TextColor3 = textColor
    mainText.TextStrokeTransparency = 1
    mainText.AnchorPoint = Vector2.new(0.5, 0.5)

    return outline, mainText
end

local function LoadESP(Player)
    local PlayerESP = Instance.new("Folder", ESPHolder)
    PlayerESP.Name = Player.Name .. "ESP"

    -- Box
    local BoxHolder = Instance.new("ScreenGui", PlayerESP)
    BoxHolder.Name = "Box"
    BoxHolder.DisplayOrder = 2

    local LeftOutline = Instance.new("Frame", BoxHolder)
    LeftOutline.BackgroundColor3 = DinoVision.esp.Box.OutlineColor
    LeftOutline.Visible = false
    LeftOutline.BorderSizePixel = 1

    local RightOutline = Instance.new("Frame", BoxHolder)
    RightOutline.BackgroundColor3 = DinoVision.esp.Box.OutlineColor
    RightOutline.Visible = false
    RightOutline.BorderSizePixel = 1

    local TopOutline = Instance.new("Frame", BoxHolder)
    TopOutline.BackgroundColor3 = DinoVision.esp.Box.OutlineColor
    TopOutline.Visible = false
    TopOutline.BorderSizePixel = 1

    local BottomOutline = Instance.new("Frame", BoxHolder)
    BottomOutline.BackgroundColor3 = DinoVision.esp.Box.OutlineColor
    BottomOutline.Visible = false
    BottomOutline.BorderSizePixel = 1

    local Left = Instance.new("Frame", BoxHolder)
    Left.BackgroundColor3 = DinoVision.esp.Box.Color
    Left.Visible = false
    Left.BorderSizePixel = 0

    local Right = Instance.new("Frame", BoxHolder)
    Right.BackgroundColor3 = DinoVision.esp.Box.Color
    Right.Visible = false
    Right.BorderSizePixel = 0

    local Top = Instance.new("Frame", BoxHolder)
    Top.BackgroundColor3 = DinoVision.esp.Box.Color
    Top.Visible = false
    Top.BorderSizePixel = 0

    local Bottom = Instance.new("Frame", BoxHolder)
    Bottom.BackgroundColor3 = DinoVision.esp.Box.Color
    Bottom.Visible = false
    Bottom.BorderSizePixel = 0

    local NameOutline, Name = CreateOutlinedText(BoxHolder, Player.Name, 10.5, Enum.Font.FredokaOne, Color3.fromRGB(255, 255, 255), Color3.fromRGB(0, 0, 0))
    Name.Visible = false
    NameOutline.Visible = false

    local DistanceOutline, Distance = CreateOutlinedText(BoxHolder, "", 10.5, Enum.Font.FredokaOne, Color3.fromRGB(255, 255, 255), Color3.fromRGB(0, 0, 0))
    Distance.Visible = false
    DistanceOutline.Visible = false

    -- Highlight
    local HilightHolder = Instance.new("Folder", PlayerESP)
    HilightHolder.Name = "Hilight"

    local Hilight = Instance.new("Highlight", HilightHolder)
    Hilight.Enabled = false

    local co = coroutine.create(function()
        RunService.Heartbeat:Connect(function()
            if ESPEnabled and IsAlive(Player) then
                local worldCharacter = Player.Character:FindFirstChild("WorldCharacter")
                if worldCharacter then
                    local upperTorso = worldCharacter:FindFirstChild("UpperTorso")
                    if upperTorso then
                        local screen, onScreen = CurrentCamera:WorldToScreenPoint(upperTorso.Position)
                        local frustumHeight = math.tan(math.rad(CurrentCamera.FieldOfView * 0.5)) * 2 * screen.Z
                        local size = CurrentCamera.ViewportSize.Y / frustumHeight * DinoVision.esp.CharacterSize
                        local position = Vector2.new(screen.X, screen.Y) - (size / 2 - Vector2.new(0, size.Y) / 20)

                        if onScreen then
                            -- Box
                            if DinoVision.esp.Box.TeamCheck ~= true or GetTeam(Player) ~= GetTeam(localPlayer) then
                                LeftOutline.Visible = DinoVision.esp.Box.Box and DinoVision.esp.Box.Outline
                                RightOutline.Visible = DinoVision.esp.Box.Box and DinoVision.esp.Box.Outline
                                TopOutline.Visible = DinoVision.esp.Box.Box and DinoVision.esp.Box.Outline
                                BottomOutline.Visible = DinoVision.esp.Box.Box and DinoVision.esp.Box.Outline

                                Left.Visible = DinoVision.esp.Box.Box
                                Right.Visible = DinoVision.esp.Box.Box
                                Top.Visible = DinoVision.esp.Box.Box
                                Bottom.Visible = DinoVision.esp.Box.Box
                                Name.Visible = DinoVision.esp.Box.Name
                                NameOutline.Visible = DinoVision.esp.Box.Name
                                Distance.Visible = DinoVision.esp.Box.Distance
                                DistanceOutline.Visible = DinoVision.esp.Box.Distance

                                Left.Size = UDim2.fromOffset(size.X, 1)
                                Right.Size = UDim2.fromOffset(size.X, 1)
                                Top.Size = UDim2.fromOffset(1, size.Y)
                                Bottom.Size = UDim2.fromOffset(1, size.Y)

                                LeftOutline.Size = Left.Size
                                RightOutline.Size = Right.Size
                                TopOutline.Size = Top.Size
                                BottomOutline.Size = Bottom.Size

                                Left.Position = UDim2.fromOffset(position.X, position.Y)
                                Right.Position = UDim2.fromOffset(position.X, position.Y + size.Y - 1)
                                Top.Position = UDim2.fromOffset(position.X, position.Y)
                                Bottom.Position = UDim2.fromOffset(position.X + size.X - 1, position.Y)
                                Name.Position = UDim2.fromOffset(screen.X, screen.Y - (size.Y + Name.TextBounds.Y + 14) / 2)
                                NameOutline.Position = Name.Position
                                Distance.Position = UDim2.fromOffset(screen.X, screen.Y + (size.Y + Distance.TextBounds.Y + 14) / 2)
                                DistanceOutline.Position = Distance.Position

                                LeftOutline.Position = Left.Position
                                RightOutline.Position = Right.Position
                                TopOutline.Position = Top.Position
                                BottomOutline.Position = Bottom.Position

                                LeftOutline.BorderColor3 = DinoVision.esp.Box.OutlineColor
                                RightOutline.BorderColor3 = DinoVision.esp.Box.OutlineColor
                                TopOutline.BorderColor3 = DinoVision.esp.Box.OutlineColor
                                BottomOutline.BorderColor3 = DinoVision.esp.Box.OutlineColor
                                LeftOutline.Transparency = DinoVision.esp.Box.BoxTransparency
                                RightOutline.Transparency = DinoVision.esp.Box.BoxTransparency
                                TopOutline.Transparency = DinoVision.esp.Box.BoxTransparency
                                BottomOutline.Transparency = DinoVision.esp.Box.BoxTransparency

                                Left.BackgroundColor3 = DinoVision.esp.Box.Color
                                Right.BackgroundColor3 = DinoVision.esp.Box.Color
                                Top.BackgroundColor3 = DinoVision.esp.Box.Color
                                Bottom.BackgroundColor3 = DinoVision.esp.Box.Color
                                LeftOutline.BackgroundColor3 = DinoVision.esp.Box.Color
                                RightOutline.BackgroundColor3 = DinoVision.esp.Box.Color
                                TopOutline.BackgroundColor3 = DinoVision.esp.Box.Color
                                BottomOutline.BackgroundColor3 = DinoVision.esp.Box.Color

                                Distance.Text = "[" .. math.floor(0.5 + (CurrentCamera.CFrame.Position - Player.Character.HumanoidRootPart.Position).magnitude) .. "]"
                                DistanceOutline.Text = Distance.Text
                                Name.Text = "[" .. Player.Name .. "]"
                                NameOutline.Text = Name.Text
                            else
                                LeftOutline.Visible = false
                                RightOutline.Visible = false
                                TopOutline.Visible = false
                                BottomOutline.Visible = false
                                Left.Visible = false
                                Right.Visible = false
                                Top.Visible = false
                                Bottom.Visible = false
                                Name.Visible = false
                                NameOutline.Visible = false
                                Distance.Visible = false
                                DistanceOutline.Visible = false
                            end

                            -- Highlight
                            if DinoVision.esp.Highlights.TeamCheck ~= true or GetTeam(Player) ~= GetTeam(localPlayer) then
                                Hilight.Enabled = DinoVision.esp.Highlights.Highlights
                                Hilight.Adornee = Player.Character

                                Hilight.OutlineColor = DinoVision.esp.Highlights.OutlineColor
                                Hilight.FillColor = DinoVision.esp.Highlights.FillColor

                                Hilight.FillTransparency = DinoVision.esp.Highlights.FillTransparency
                                Hilight.OutlineTransparency = DinoVision.esp.Highlights.OutlineTransparency
                            else
                                Hilight.Enabled = false
                                Hilight.Adornee = nil
                            end
                        else
                            LeftOutline.Visible = false
                            RightOutline.Visible = false
                            TopOutline.Visible = false
                            BottomOutline.Visible = false
                            Left.Visible = false
                            Right.Visible = false
                            Top.Visible = false
                            Bottom.Visible = false
                            Name.Visible = false
                            NameOutline.Visible = false
                            Distance.Visible = false
                            DistanceOutline.Visible = false
                            Hilight.Enabled = false
                            Hilight.Adornee = nil
                        end
                    end
                end
            else
                LeftOutline.Visible = false
                RightOutline.Visible = false
                TopOutline.Visible = false
                BottomOutline.Visible = false
                Left.Visible = false
                Right.Visible = false
                Top.Visible = false
                Bottom.Visible = false
                Name.Visible = false
                NameOutline.Visible = false
                Distance.Visible = false
                DistanceOutline.Visible = false
                Hilight.Enabled = false
                Hilight.Adornee = nil
            end
        end)
        if not Players:FindFirstChild(Player.Name) then
            PlayerESP:Destroy()
            coroutine.yield()
        end
    end)
    coroutine.resume(co)
end

for i, plr in pairs(players:GetChildren()) do
    if plr ~= localPlayer then
        LoadESP(plr)
    end
end

players.PlayerAdded:Connect(function(plr)
    if plr ~= localPlayer then
        LoadESP(plr)
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.F1 and not gameProcessed then
        ESPEnabled = not ESPEnabled
        if ESPEnabled then
            print("ESP Ativado")
        else
            print("ESP Desativado")
        end
    end
end)
